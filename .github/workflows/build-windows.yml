name: Build Windows EXE

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Upgrade pip and install wheel
        run: python -m pip install --upgrade pip setuptools wheel
        shell: pwsh

      - name: Install requirements
        run: |
          python -m pip install -r requirements.txt
        shell: pwsh

      - name: Build EXE with PyInstaller (bash, multi-line)
        # use bash to allow backslash line continuation and consistent quoting
        shell: bash
        run: |
          set -e
          echo "Starting PyInstaller build..."
          pyinstaller --clean --log-level=DEBUG --onefile --noconsole \
            --add-data "Untitled17.ipynb;." \
            --collect-all voila --collect-all nbformat --collect-all jinja2 \
            --hidden-import markupsafe --hidden-import nbclient --hidden-import traitlets \
            --hidden-import jupyter_client --hidden-import tornado --hidden-import pygments \
            main.py 2>&1 | tee pyinstaller.log

      - name: Show last lines of pyinstaller.log (debug)
        if: always()
        shell: bash
        run: |
          echo "===== Last 200 lines of pyinstaller.log ====="
          if [ -f pyinstaller.log ]; then tail -n 200 pyinstaller.log; else echo "pyinstaller.log not found"; fi

      - name: List dist folder (debug)
        if: always()
        shell: pwsh
        run: |
          Write-Host "Contents of dist folder:"
          if (Test-Path dist) { Get-ChildItem -Recurse -Force dist | Format-List } else { Write-Host "dist folder not found" }

      - name: Upload built EXE artifact (if exists)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: windows-exe
          path: dist/*.exe

      - name: Upload pyinstaller log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pyinstaller-log
          path: pyinstaller.log
